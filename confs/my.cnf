################# /etc/my.cnf ###################

#echo 0 > /proc/sys/vm/swappiness OR put vm.swappiness=0 in /etc/sysctl.conf and reboot (so that OS doesnot do swaps)

#Total InnoDB memory usage :
# nblocks = innodb_buffer_pool_size(MB)/20
# os_threads = (innodb_buffer_pool_size >= 1GB) = 50000, (innodb_buffer_pool_size >= 8Mb) = 10000, else 1000
# innodb_buffer_pool_size
# innodb_additional_mem_pool_size
# innodb_log_buffer_size
# adaptive index hash, size= innodb_buffer_pool_size / 64
# system dictionary hash, size = 6 * innodb_buffer_pool_size / 512
# memory for sync_array, which is used for syncronization primitives, size = OS_THREADS * 152
# memory for os_events, which are also used for syncronization primitives, OS_THREADS * 216
# and memory for locking system, size=5 * 4 * NBLOCKS

# TOTAL = innodb_buffer_pool_size + innodb_log_buffer_size + innodb_additional_mem_pool_size + 812 / 16384 * innodb_buffer_pool_size + OS_THREADS * 368

# For indexed to created together, create transactions for inserting bulk records
#If you have changed your datadir location, do this, else it will give problems
#sudo vim /etc/apparmor.d/usr.sbin.mysqld
#sudo invoke-rc.d apparmor restart
#sudo mysql_install_db


[client]
port                                = 3306
socket                              = /var/run/mysqld/mysqld.sock

[mysqld_safe]
socket                              = /var/run/mysqld/mysqld.sock
nice                                = 0

[mysqld]
#innodb_file_per_table              instead to storing all data in one file, this splits it by table, can have much large table data, has benefits like fast recovery, fast backup, smaller on disk size .. but do not use it unless sure, migration needs redoing all inserts with this parameter disabled
user                                = mysql
pid-file                            = /var/run/mysqld/mysqld.pid
datadir                             = /trac/db/data/mysql
log_bin                             = /trac/db/log/mysql/mysql-bin.log
#mysqld-binlog-bin-index             = /db/log/mysql/mysqld-bin.index
expire-logs-days                    = 7
log-error                           = /trac/db/log/mysql/mysqld.err
log_error                	        = /trac/db/log/mysql/error.log
slow_query_log		    	        = 1 
slow_query_log_file		            = /trac/db/log/mysql/mysqld-slow.log
long-query-time                     = 1
relay-log                           = /trac/db/log/mysql/mysql-relay
relay-log-index                     = /trac/db/log/mysql/mysql-relay.index
default-storage-engine              = innodb
innodb_data_home_dir                = /trac/db/data/mysql
innodb_file_per_table
innodb_autoextend_increment         = 50
innodb_log_group_home_dir           = /trac/db/log/mysql
innodb_log_files_in_group           = 2
innodb_log_file_size                = 256M #recovery speed from logs, 256M is mostly good

# Start Replication Parameters
#server-id                          = 1
innodb_flush_log_at_trx_commit      = 2  #0 better performance but loose last seconds of commit in crash, 1 for ACID compliance and no loss of data in crash,2 performance and no data loss in mysql crash 
#sync-binlog                        = 1
# End Replication Parameters

# Start Performance Parameters
#tmpdir                             = /tmp-ram
max_connections                     = 50
max_heap_table_size                 = 512M
tmp_table_size                      = 512M
table_cache                         = 128
sort_buffer_size                    = 4M
query_cache_min_res_unit            = 1K
query_cache_limit                   = 1M
query_cache_size                    = 100M
max_allowed_packet                  = 16M
thread_stack                        = 128K
thread_cache_size                   = 8
innodb_buffer_pool_size             = 11250M  # 70-80% of memory is a safe bet
innodb_log_buffer_size              = 4M     # log flushed to file after done 4M is good
innodb_additional_mem_pool_size     = 4M
innodb_lock_wait_timeout            = 2
innodb_file_io_threads              = 4
innodb_thread_concurrency           = 8  #8 is a decent start, depends on application
innodb_flush_method                 = O_DIRECT  #avoids double buffering with OS, only innodb buffers stuff
#transaction-isolation               = READ-COMMITTED
skip-external-locking
# End Performance Parameters

################# /etc/my.cnf ###################
